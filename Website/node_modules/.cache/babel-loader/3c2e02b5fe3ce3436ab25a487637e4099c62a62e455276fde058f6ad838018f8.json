{"ast":null,"code":"var _jsxFileName = \"/Users/anncyzhou/Desktop/earthquake visualizer project/src/pages/Visualize.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, CircleMarker, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Visualize() {\n  _s();\n  const [data, setData] = useState([]);\n  const [minMag, setMinMag] = useState(4.0);\n  const [maxMag, setMaxMag] = useState(10.0);\n  useEffect(() => {\n    fetch(\"/earthquakes.json\").then(res => res.json()).then(json => setData(json));\n  }, []);\n  const filtered = data.filter(e => e.magnitude >= minMag && e.magnitude <= maxMag);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Earthquake Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Min Magnitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: minMag,\n          step: \"0.1\",\n          onChange: e => setMinMag(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: [\"Max Magnitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxMag,\n          step: \"0.1\",\n          onChange: e => setMaxMag(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [37.8, -96],\n      zoom: 4,\n      scrollWheelZoom: true,\n      style: {\n        height: \"600px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), filtered.map((q, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: [q.latitude, q.longitude],\n        radius: q.magnitude * 2,\n        color: \"red\",\n        fillOpacity: 0.6,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Magnitude: \", q.magnitude, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 45\n            }, this), \"(\", q.latitude, \", \", q.longitude, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualize, \"EZitiqlE426Nju0rXt5pfRBrMu0=\");\n_c = Visualize;\nvar _c;\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","CircleMarker","Tooltip","jsxDEV","_jsxDEV","Visualize","_s","data","setData","minMag","setMinMag","maxMag","setMaxMag","fetch","then","res","json","filtered","filter","e","magnitude","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","step","onChange","parseFloat","target","marginLeft","center","zoom","scrollWheelZoom","height","width","url","map","q","i","latitude","longitude","radius","color","fillOpacity","_c","$RefreshReg$"],"sources":["/Users/anncyzhou/Desktop/earthquake visualizer project/src/pages/Visualize.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, CircleMarker, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nexport default function Visualize() {\n  const [data, setData] = useState([]);\n  const [minMag, setMinMag] = useState(4.0);\n  const [maxMag, setMaxMag] = useState(10.0);\n\n  useEffect(() => {\n    fetch(\"/earthquakes.json\")\n      .then(res => res.json())\n      .then(json => setData(json));\n  }, []);\n\n  const filtered = data.filter(e => e.magnitude >= minMag && e.magnitude <= maxMag);\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Earthquake Visualizer</h2>\n      <div style={{ marginBottom: \"20px\" }}>\n        <label>\n          Min Magnitude:\n          <input type=\"number\" value={minMag} step=\"0.1\" onChange={e => setMinMag(parseFloat(e.target.value))} />\n        </label>\n        <label style={{ marginLeft: \"20px\" }}>\n          Max Magnitude:\n          <input type=\"number\" value={maxMag} step=\"0.1\" onChange={e => setMaxMag(parseFloat(e.target.value))} />\n        </label>\n      </div>\n\n      <MapContainer center={[37.8, -96]} zoom={4} scrollWheelZoom style={{ height: \"600px\", width: \"100%\" }}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        {filtered.map((q, i) => (\n          <CircleMarker key={i} center={[q.latitude, q.longitude]} radius={q.magnitude * 2} color=\"red\" fillOpacity={0.6}>\n            <Tooltip>\n              <span>Magnitude: {q.magnitude}<br/>({q.latitude}, {q.longitude})</span>\n            </Tooltip>\n          </CircleMarker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}